{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u0110ATN1\\\\Code\\\\Front-End\\\\src\\\\component\\\\action\\\\chatprocess.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport Moment from 'moment';\n\nclass Chatprocess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllMessage = item => {\n      var dataUser = JSON.parse(localStorage.getItem('userInfo'));\n      axios.get(`/api/chat/views/${item}/${dataUser[0].id}`).then(res => {\n        if (res.status === 200) {\n          const message = res.data;\n          this.setState({\n            message: message.message\n          });\n        }\n      }).catch(error => console.log(error));\n    };\n\n    this.getUser = () => {\n      axios.get('/api/account/views').then(res => {\n        if (res.status === 200) {\n          const news = res.data;\n          this.setState({\n            news: news.news\n          });\n        }\n      }).catch(error => console.log(error));\n    };\n\n    this.getAllUserById = item => {\n      axios.get(`/api/account/getById/${item}`).then(res => {\n        if (res.status === 200) {\n          const listById = res.data[0];\n          this.setState({\n            id_account: listById.id_account,\n            username: listById.username,\n            name: listById.name\n          });\n        }\n      }).catch(error => console.log(error));\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSendMessage = event => {\n      event.preventDefault();\n      var dataUser = JSON.parse(localStorage.getItem('userInfo'));\n      const newMessage = {\n        chat_to: dataUser[0].id,\n        chat_from: this.state.id_account,\n        content: this.state.content,\n        time: Moment(new Date()).format('YYYY-MM-DD HH:mm:ss')\n      };\n      console.log(Moment(new Date()).format('YYYY-MM-DD HH:mm:ss'));\n      axios.post(`/api/chat/insert/${dataUser[0].id}/${this.state.id_account}`, newMessage).then(res => {\n        let message1 = this.state.message;\n        message1 = [newMessage, ...message1];\n        this.setState({\n          message: message1\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      news: [],\n      message: [],\n      chat_from: '',\n      content: '',\n      listById: [],\n      id_account: '',\n      newMes: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.getAllUserById();\n    this.getAllMessage();\n  }\n\n  componentWillMount(item) {\n    var dataUser = JSON.parse(localStorage.getItem('userInfo'));\n    var socket = io(\"http://localhost:4000\");\n    var room = item + \",\" + dataUser[0].id;\n    socket.on('connect', function () {\n      socket.emit('room', room);\n    });\n    socket.on('message', data => {\n      var {\n        message\n      } = this.state;\n      message.unshift(data);\n      this.setState({\n        message\n      });\n    });\n  }\n\n  render() {\n    var dataUser = JSON.parse(localStorage.getItem('userInfo'));\n    var sort = this.state.message.sort();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1940306/chat_avatar_01.jpg\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      name: \"chat_from\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, \"Tr\\xF2 chuy\\u1EC7n v\\u1EDBi \", this.state.name), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    }, this.state.newMes.content))), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, sort.map((item, key) => /*#__PURE__*/React.createElement(React.Fragment, null, item.chat_to !== dataUser[0].id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"you\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 69\n      }\n    }, this.state.name, \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 69\n      }\n    }, Moment(item.time).format(\" HH:mm:ss\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 65\n      }\n    }, item.content))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 69\n      }\n    }, \" B\\u1EA1n\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 69\n      }\n    }, Moment(item.time).format(\" HH:mm:ss\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 65\n      }\n    }, item.content)))))), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Type your message\",\n      name: \"content\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"send\",\n      type: \"submit\",\n      className: \"btn btn-success waves-effect waves-light m-1\",\n      onClick: this.handleSendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 45\n      }\n    }, \"SEND\"))))), /*#__PURE__*/React.createElement(\"aside\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, this.state.news.map((item, key) => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getAllUserById(item.id_account) || this.getAllMessage(item.id_account) || this.componentWillMount(item.id_account),\n      \"data-target\": \"#chat\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1940306/chat_avatar_01.jpg\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 53\n      }\n    }, item.name)))))))))));\n  }\n\n}\n\nexport default Chatprocess;","map":{"version":3,"sources":["C:/Users/admin/Desktop/ĐATN1/Code/Front-End/src/component/action/chatprocess.js"],"names":["React","Component","io","axios","Moment","Chatprocess","constructor","props","getAllMessage","item","dataUser","JSON","parse","localStorage","getItem","get","id","then","res","status","message","data","setState","catch","error","console","log","getUser","news","getAllUserById","listById","id_account","username","name","handleInputChange","event","target","value","handleSendMessage","preventDefault","newMessage","chat_to","chat_from","state","content","time","Date","format","post","message1","newMes","componentDidMount","componentWillMount","socket","room","on","emit","unshift","render","sort","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios'\r\nimport Moment from 'moment';\r\n\r\nclass Chatprocess extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            news: [],\r\n            message: [],\r\n            chat_from: '',\r\n            content: '',\r\n            listById: [],\r\n            id_account: '',\r\n            newMes: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUser()\r\n        this.getAllUserById()\r\n        this.getAllMessage()\r\n    }\r\n\r\n    componentWillMount(item) {\r\n        var dataUser = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        var socket = io(\"http://localhost:4000\");\r\n        var room = item + \",\" + dataUser[0].id;\r\n        socket.on('connect', function () {\r\n            socket.emit('room', room);\r\n        });\r\n\r\n        socket.on('message', (data) => {\r\n            var { message } = this.state\r\n            message.unshift(data)\r\n            this.setState({\r\n                message\r\n            })\r\n        });\r\n    }\r\n\r\n    getAllMessage = (item) => {\r\n        var dataUser = JSON.parse(localStorage.getItem('userInfo'))\r\n        axios.get(`/api/chat/views/${item}/${dataUser[0].id}`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    const message = res.data;\r\n                    this.setState({\r\n                        message: message.message,\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => console.log(error)\r\n            );\r\n    }\r\n    getUser = () => {\r\n        axios.get('/api/account/views')\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    const news = res.data;\r\n                    this.setState({ news: news.news });\r\n                }\r\n            })\r\n            .catch(error => console.log(error)\r\n            );\r\n    }\r\n    getAllUserById = (item) => {\r\n        axios.get(`/api/account/getById/${item}`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    const listById = res.data[0];\r\n\r\n                    this.setState({\r\n                        id_account: listById.id_account,\r\n                        username: listById.username,\r\n                        name: listById.name,\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error)\r\n            );\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSendMessage = (event) => {\r\n        event.preventDefault();\r\n        var dataUser = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n        const newMessage = {\r\n            chat_to: dataUser[0].id,\r\n            chat_from: this.state.id_account,\r\n            content: this.state.content,\r\n            time: Moment(new Date()).format('YYYY-MM-DD HH:mm:ss'),\r\n        };\r\n        console.log(Moment(new Date()).format('YYYY-MM-DD HH:mm:ss'));\r\n        axios.post(`/api/chat/insert/${dataUser[0].id}/${this.state.id_account}`, newMessage)\r\n            .then(res => {\r\n                let message1 = this.state.message;\r\n                message1 = [newMessage, ...message1];\r\n                this.setState({ message: message1 });\r\n\r\n            })\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    render() {\r\n        var dataUser = JSON.parse(localStorage.getItem('userInfo'))\r\n        var sort = this.state.message.sort()\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-12\">\r\n                            <main className=\"col-10\">\r\n                                <form onSubmit={this.handleSendMessage}>\r\n                                    <div>\r\n                                        <header>\r\n                                            <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1940306/chat_avatar_01.jpg\" alt=\"\" />\r\n                                            <div>\r\n                                                <h2 name=\"chat_from\" onChange={this.handleInputChange} >Trò chuyện với {this.state.name}</h2>\r\n                                                <h3>{this.state.newMes.content}</h3>\r\n                                            </div>\r\n                                        </header>\r\n                                        <ul id=\"chat\">\r\n                                            {sort.map((item, key) =>\r\n                                                <>\r\n                                                    {item.chat_to !== dataUser[0].id\r\n                                                        ?\r\n                                                        <>\r\n                                                            <li className=\"you\">\r\n                                                                <div className=\"entete\">\r\n                                                                    <span className=\"status green\" />\r\n                                                                    <h2>{this.state.name} </h2>\r\n                                                                    <h3>{\r\n                                                                        Moment(item.time).format(\" HH:mm:ss\")\r\n                                                                    }</h3>\r\n                                                                </div>\r\n                                                                <div className=\"message\">\r\n                                                                    {item.content}\r\n                                                                </div>\r\n                                                            </li>\r\n\r\n                                                        </>\r\n                                                        :\r\n                                                        <>\r\n                                                            <li className=\"me\">\r\n                                                                <div className=\"entete\">\r\n                                                                    <h3> Bạn</h3>\r\n                                                                    <h2>{\r\n                                                                        Moment(item.time).format(\" HH:mm:ss\")\r\n                                                                    }</h2>\r\n                                                                    <span\r\n                                                                        className=\"status blue\" />\r\n                                                                </div>\r\n                                                                <div className=\"message\">\r\n                                                                    {item.content}\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        </>\r\n\r\n                                                    }\r\n\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </ul>\r\n                                        <footer>\r\n                                            <textarea placeholder=\"Type your message\" name=\"content\" onChange={this.handleInputChange} />\r\n                                            <button id=\"send\" type=\"submit\" className=\"btn btn-success waves-effect waves-light m-1\"\r\n                                                onClick={this.handleSendMessage} >\r\n                                                SEND\r\n                                                </button>\r\n                                        </footer>\r\n                                    </div>\r\n                                </form>\r\n                            </main>\r\n                            <aside className=\"col-2\">\r\n                                <header>\r\n                                    <input type=\"text\" placeholder=\"search\" />\r\n                                </header>\r\n\r\n                                <ul >\r\n                                    {this.state.news.map((item, key) =>\r\n                                        <button onClick={() => this.getAllUserById(item.id_account) || this.getAllMessage(item.id_account) || this.componentWillMount(item.id_account)} \r\n                                        data-target=\"#chat\" key={key}>\r\n                                            <li>\r\n                                                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1940306/chat_avatar_01.jpg\" alt=\"\" />\r\n                                                <div>\r\n                                                    <h2>{item.name}</h2>\r\n\r\n                                                </div>\r\n                                            </li>\r\n                                        </button>\r\n                                    )}\r\n                                </ul>\r\n                            </aside>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chatprocess;"]},"metadata":{},"sourceType":"module"}